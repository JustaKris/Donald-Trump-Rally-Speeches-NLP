name: Security Scan

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run security scans weekly on Mondays at 9 AM UTC
    - cron: '0 9 * * 1'

jobs:
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    
    - name: Upgrade pip to latest version
      run: |
        python -m pip install --upgrade pip
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 2.2.1
        virtualenvs-create: true
        virtualenvs-in-project: true
    
    # Skip dependency caching to save disk space
    # TensorFlow + dependencies are too large for GitHub runners
    
    - name: Install dependencies (without dev to save space)
      run: |
        poetry install --without dev
    
    - name: Install security tools
      run: |
        poetry add --group dev bandit pip-audit --quiet
    
    - name: Run bandit security scan (code vulnerabilities)
      run: |
        # Skip B104 (hardcoded 0.0.0.0 - intentional for containers)
        # Skip B615 (HuggingFace model pinning)
        poetry run bandit -r src/ -f json -o bandit-report.json --skip B104,B615 || true
        poetry run bandit -r src/ --skip B104,B615
      continue-on-error: true
    
    - name: Check for known vulnerabilities with pip-audit
      run: |
        poetry run pip-audit --desc --skip-editable
      continue-on-error: true
    
    - name: Upload bandit report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: bandit-security-report
        path: bandit-report.json
        retention-days: 30
        if-no-files-found: ignore
